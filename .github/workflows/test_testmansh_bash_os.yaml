---
# Template: 3.4.0
name: "Test / TestManSH / Bash OS"

env:
  DEV_CICD_DEBUG: ""

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "feature/**"
    paths:
      - "src/*-api-*"
      - "src/*-fmt-*"
      - "src/*-fs-*"
      - "src/*-iam-*"
      - "src/*-lib-*"
      - "src/*-os-*"
      - "src/*-rbac-*"
      - "src/*-rxtx-*"
      - "src/*-txt-*"
      - "src/*-vcs-*"
      - "test/batscore/bash-os/**"

jobs:
  test-testmansh-bash-os:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        target:
          - "BASH_OS_REDHAT_A"
          - "BASH_OS_REDHAT_B"
          - "BASH_OS_REDHAT_C"
          - "BASH_OS_FEDORA_A"
          - "BASH_OS_FEDORA_B"
          - "BASH_OS_DEBIAN"
          - "BASH_OS_UBUNTU"
          - "BASH_OS_OTHER"
    steps:

      - name: "Check out repository code"
        uses: "actions/checkout@main"

      - name: "Prepare environment"
        run: "./bin/dev-lib-base"

      - name: "Download tools"
        run: "./bin/dev-lib-testmansh"

      - name: "Build app"
        run: "./bin/dev-build-project"

      - name: "Run tests"
        shell: 'script -q -e -c "bash {0}"'
        run: |
          source ./bin/dev-set &&
          source ./bin/dev-env-project &&
          ./bin/dev-test-testmansh "$DEV_TEST_TESTMANSH_CONTAINER_${{matrix.target}}" "$DEV_TEST_TESTMANSH_CASES_BASH_OS"
...
