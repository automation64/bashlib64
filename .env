#!/bin/sh
#
# Project development environment variables
#
# * Use along with .local and .secrets
# * Template version: 2.3.0
#

# Base file and directory names for building paths
DEV_BASE_BUILD='build'
export DEV_BASE_BUILD

DEV_BASE_TEST='test'
export DEV_BASE_TEST

DEV_BASE_SRC='src'
export DEV_BASE_SRC

# Base path for builds
DEV_BUILD="${DEV_ROOT}/${DEV_BASE_BUILD}"
export DEV_BUILD

# Base path for documentation
DEV_DOCS="${DEV_ROOT}/docs"
export DEV_DOCS

# Source files
DEV_SRC="${DEV_ROOT}/${DEV_BASE_SRC}"
export DEV_SRC

# Test files
DEV_TEST="${DEV_ROOT}/${DEV_BASE_TEST}"
export DEV_TEST

# Dev/Test scripts
DEV_BIN="${DEV_ROOT}/bin"
export DEV_BIN

# Dev/Test libs
DEV_LIB="${DEV_ROOT}/lib"
export DEV_LIB

# Temporary data location
DEV_TMP="${DEV_ROOT}/.tmp"
export DEV_TMP

# Variable data location
DEV_VAR="${DEV_ROOT}/.var"
export DEV_VAR

#
# CICD components
#

# Lib / Installer64 / Source
DEV_LIB_INSTALLER64_URL='https://raw.githubusercontent.com/automation64/installer64/main/src/install-installer64'
export DEV_LIB_INSTALLER64_URL

# Lib / Installer64 / Target
DEV_LIB_INSTALLER64_TARGET="${DEV_LIB}/inst64"
export DEV_LIB_INSTALLER64_TARGET

# Lib / BashLib64 / Deployment
DEV_CICD_BASHLIB64="${DEV_LIB}/bl64"
export DEV_CICD_BASHLIB64

# Lib / TestmanSH / Source
DEV_LIB_TESTMANSH_REPO='https://raw.githubusercontent.com/automation64/testmansh/main/testmansh'
export DEV_LIB_TESTMANSH_REPO

# Lib / TestmanSH / Target
DEV_LIB_TESTMANSH_BIN="${DEV_LIB}/testmansh"
export DEV_LIB_TESTMANSH_BIN

# Lint / Bash / Configuration
DEV_CICD_LINT_BASH_CFG="${DEV_ROOT}/.shellcheckrc"
export DEV_CICD_LINT_BASH_CFG

# Lint / Bash / Target
DEV_CICD_LINT_BASH_SOURCE="build/test/${DEV_BUILD_NAME_SA}"
export DEV_CICD_LINT_BASH_SOURCE

# Repo / Origin repo name
DEV_CICD_REPO_ORIGIN_NAME='origin'
export DEV_CICD_REPO_ORIGIN_NAME

# Repo / Upstream repo name
DEV_CICD_REPO_UPSTREAM_NAME='upstream'
export DEV_CICD_REPO_UPSTREAM_NAME

# Repo / Main branch name
DEV_CICD_BRANCH_MAIN='main'
export DEV_CICD_BRANCH_MAIN

# Repo / Changelog
DEV_CICD_REPO_CHANGELOG='CHANGELOG.md'
export DEV_CICD_REPO_CHANGELOG

# Release / GitHub / Repository Owner
DEV_CICD_RELEASE_REPO_OWNER="automation64"
export DEV_CICD_RELEASE_REPO_OWNER

# Release / GitHub / Repository Name
DEV_CICD_RELEASE_REPO_NAME="bashlib64"
export DEV_CICD_RELEASE_REPO_NAME

# Lab / Container Registry
DEV_CICD_LAB_REGISTRY="ghcr.io/automation64"
export DEV_CICD_LAB_REGISTRY

# Lab / Default image
DEV_CICD_LAB_IMAGE='bash-test/alpine-3-bash-test'
export DEV_CICD_LAB_IMAGE

# Build / Target file name
DEV_BUILD_NAME_SA='bashlib64.bash'
export DEV_BUILD_NAME_SA
DEV_BUILD_NAME_CORE='bashlib64-core.bash'
export DEV_BUILD_NAME_CORE
DEV_BUILD_NAME_OPT='bashlib64-opt.bash'
export DEV_BUILD_NAME_OPT
DEV_BUILD_NAME_MODULE='bashlib64-module'
export DEV_BUILD_NAME_MODULE
DEV_BUILD_NAME_MODULE_CORE='bashlib64-module-core.bash'
export DEV_BUILD_NAME_MODULE_CORE

# Build / Target full path
DEV_BUILD_FULL_PATH_TEST="${DEV_BUILD}/test"
export DEV_BUILD_FULL_PATH_TEST
DEV_BUILD_FULL_PATH_RELEASE="${DEV_BUILD}/release"
export DEV_BUILD_FULL_PATH_RELEASE

# Pack / Package name
DEV_PACK_NAME_SA='bashlib64-stand-alone.tgz'
export DEV_PACK_NAME_SA
DEV_PACK_NAME_SPLIT='bashlib64-split.tgz'
export DEV_PACK_NAME_SPLIT
DEV_PACK_NAME_MODULAR='bashlib64-modular.tgz'
export DEV_PACK_NAME_MODULAR

# Pack / Package name
DEV_PACK_STORE="${DEV_BUILD}/pack"
export DEV_PACK_STORE

#
# Project specific variables
#

# Test / Bash / Container
DEV_TEST_CONTAINER_OS_SINGLE='bash-test/alpine-3-bash-test:latest'
export DEV_TEST_CONTAINER_OS_SINGLE
DEV_TEST_CONTAINER_OS_REDHAT=''
DEV_TEST_CONTAINER_OS_REDHAT="${DEV_TEST_CONTAINER_OS_REDHAT} bash-test/almalinux-8-bash-test:latest bash-test/almalinux-9-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDHAT="${DEV_TEST_CONTAINER_OS_REDHAT} bash-test/centos-7-bash-test:latest bash-test/centos-8-bash-test:latest bash-test/centos-9-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDHAT="${DEV_TEST_CONTAINER_OS_REDHAT} bash-test/oraclelinux-7-bash-test:latest bash-test/oraclelinux-8-bash-test:latest bash-test/oraclelinux-9-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDHAT="${DEV_TEST_CONTAINER_OS_REDHAT} bash-test/rhel-8-bash-test:latest bash-test/rhel-9-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDHAT="${DEV_TEST_CONTAINER_OS_REDHAT} bash-test/rockylinux-8-bash-test:latest bash-test/rockylinux-9-bash-test:latest"
export DEV_TEST_CONTAINER_OS_REDHAT
DEV_TEST_CONTAINER_OS_DEBIAN=''
DEV_TEST_CONTAINER_OS_DEBIAN="${DEV_TEST_CONTAINER_OS_DEBIAN} bash-test/debian-9-bash-test:latest bash-test/debian-10-bash-test:latest bash-test/debian-11-bash-test:latest"
DEV_TEST_CONTAINER_OS_DEBIAN="${DEV_TEST_CONTAINER_OS_DEBIAN} bash-test/ubuntu-18.4-bash-test:latest bash-test/ubuntu-20.4-bash-test:latest bash-test/ubuntu-21.4-bash-test:latest"
DEV_TEST_CONTAINER_OS_DEBIAN="${DEV_TEST_CONTAINER_OS_DEBIAN} bash-test/ubuntu-22.4-bash-test:latest"
# DISABLED # DEV_TEST_CONTAINER_OS_DEBIAN="${DEV_TEST_CONTAINER_OS_DEBIAN} bash-test/ubuntu-23.4-bash-test:latest"
DEV_TEST_CONTAINER_OS_DEBIAN="${DEV_TEST_CONTAINER_OS_DEBIAN} bash-test/ubuntu-23.10-bash-test:latest"
export DEV_TEST_CONTAINER_OS_DEBIAN
DEV_TEST_CONTAINER_OS_FEDORA=''
DEV_TEST_CONTAINER_OS_FEDORA="${DEV_TEST_CONTAINER_OS_FEDORA} bash-test/fedora-33-bash-test:latest bash-test/fedora-34-bash-test:latest bash-test/fedora-35-bash-test:latest"
DEV_TEST_CONTAINER_OS_FEDORA="${DEV_TEST_CONTAINER_OS_FEDORA} bash-test/fedora-36-bash-test:latest bash-test/fedora-37-bash-test:latest"
DEV_TEST_CONTAINER_OS_FEDORA="${DEV_TEST_CONTAINER_OS_FEDORA} bash-test/fedora-38-bash-test:latest bash-test/fedora-39-bash-test:latest"
export DEV_TEST_CONTAINER_OS_FEDORA
DEV_TEST_CONTAINER_OS_OTHER=''
DEV_TEST_CONTAINER_OS_OTHER="${DEV_TEST_CONTAINER_OS_OTHER} bash-test/alpine-3-bash-test:latest"
DEV_TEST_CONTAINER_OS_OTHER="${DEV_TEST_CONTAINER_OS_OTHER} bash-test/sles-15-bash-test:latest"
export DEV_TEST_CONTAINER_OS_OTHER
DEV_TEST_CONTAINER_OS_REDUCED=''
DEV_TEST_CONTAINER_OS_REDUCED="${DEV_TEST_CONTAINER_OS_REDUCED} bash-test/centos-7-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDUCED="${DEV_TEST_CONTAINER_OS_REDUCED} bash-test/debian-9-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDUCED="${DEV_TEST_CONTAINER_OS_REDUCED} bash-test/alpine-3-bash-test:latest"
DEV_TEST_CONTAINER_OS_REDUCED="${DEV_TEST_CONTAINER_OS_REDUCED} bash-test/sles-15-bash-test:latest"
export DEV_TEST_CONTAINER_OS_REDUCED
DEV_TEST_CONTAINER_NON_OS='bash-test/alpine-3-bash-test:latest'
export DEV_TEST_CONTAINER_NON_OS
DEV_TEST_CONTAINER_OPT='bash-test/alpine-3-bash-test:latest'
export DEV_TEST_CONTAINER_OPT
DEV_TEST_CONTAINER_ANSIBLE='bash-test/oraclelinux-9-bash-test-ansible-2:latest'
export DEV_TEST_CONTAINER_ANSIBLE
DEV_TEST_CONTAINER_CLOUD='bash-test/oraclelinux-9-bash-test-cloud:latest'
export DEV_TEST_CONTAINER_CLOUD
DEV_TEST_CONTAINER_CONTAINER='bash-test/oraclelinux-9-bash-test-podman:latest bash-test/oraclelinux-9-bash-test-docker:latest'
export DEV_TEST_CONTAINER_CONTAINER
DEV_TEST_CONTAINER_KUBERNETES='bash-test/oraclelinux-9-bash-test-k8s:latest'
export DEV_TEST_CONTAINER_KUBERNETES
DEV_TEST_CONTAINER_MONGODB='bash-test/oraclelinux-9-bash-test-mongosh-6:latest'
export DEV_TEST_MONGODB_MONGODB
DEV_TEST_CONTAINER_TERRAFORM='bash-test/oraclelinux-9-bash-test-terraform:latest'
export DEV_TEST_TERRAFORM_TERRAFORM

# Test / Cases
DEV_TEST_CASE_OS="${DEV_BASE_TEST}/batscore/bash-os"
export DEV_TEST_CASE_OS
DEV_TEST_CASE_NON_OS="${DEV_BASE_TEST}/batscore/bash-non-os"
export DEV_TEST_CASE_NON_OS
DEV_TEST_CASE_OPT="${DEV_BASE_TEST}/batscore/bash-opt"
export DEV_TEST_CASE_OPT
DEV_TEST_CASE_ANSIBLE="${DEV_BASE_TEST}/batscore/ansible"
export DEV_TEST_CASE_ANSIBLE
DEV_TEST_CASE_CLOUD="${DEV_BASE_TEST}/batscore/cloud"
export DEV_TEST_CASE_CLOUD
DEV_TEST_CASE_CONTAINER="${DEV_BASE_TEST}/batscore/container"
export DEV_TEST_CASE_CONTAINER
DEV_TEST_CASE_KUBERNETES="${DEV_BASE_TEST}/batscore/kubernetes"
export DEV_TEST_CASE_KUBERNETES
DEV_TEST_CASE_MONGODB="${DEV_BASE_TEST}/batscore/mongodb"
export DEV_TEST_CASE_MONGODB
DEV_TEST_CASE_TERRAFORM="${DEV_BASE_TEST}/batscore/terraform"
export DEV_TEST_CASE_TERRAFORM

# Modules / Core
DEV_MODULES_CORE=''
DEV_MODULES_CORE="${DEV_MODULES_CORE} check"
DEV_MODULES_CORE="${DEV_MODULES_CORE} dbg"
DEV_MODULES_CORE="${DEV_MODULES_CORE} log"
DEV_MODULES_CORE="${DEV_MODULES_CORE} msg"
DEV_MODULES_CORE="${DEV_MODULES_CORE} os "
export DEV_MODULES_CORE

# Modules / Optional
DEV_MODULES_OPT=''
DEV_MODULES_OPT="${DEV_MODULES_OPT} ans"
DEV_MODULES_OPT="${DEV_MODULES_OPT} api"
DEV_MODULES_OPT="${DEV_MODULES_OPT} arc"
DEV_MODULES_OPT="${DEV_MODULES_OPT} aws"
DEV_MODULES_OPT="${DEV_MODULES_OPT} bsh"
DEV_MODULES_OPT="${DEV_MODULES_OPT} cnt"
DEV_MODULES_OPT="${DEV_MODULES_OPT} fmt"
DEV_MODULES_OPT="${DEV_MODULES_OPT} fs "
DEV_MODULES_OPT="${DEV_MODULES_OPT} gcp"
DEV_MODULES_OPT="${DEV_MODULES_OPT} hlm"
DEV_MODULES_OPT="${DEV_MODULES_OPT} iam"
DEV_MODULES_OPT="${DEV_MODULES_OPT} k8s"
DEV_MODULES_OPT="${DEV_MODULES_OPT} mdb"
DEV_MODULES_OPT="${DEV_MODULES_OPT} pkg"
DEV_MODULES_OPT="${DEV_MODULES_OPT} py"
DEV_MODULES_OPT="${DEV_MODULES_OPT} rbac"
DEV_MODULES_OPT="${DEV_MODULES_OPT} rnd"
DEV_MODULES_OPT="${DEV_MODULES_OPT} rxtx"
DEV_MODULES_OPT="${DEV_MODULES_OPT} tf"
DEV_MODULES_OPT="${DEV_MODULES_OPT} tm "
DEV_MODULES_OPT="${DEV_MODULES_OPT} txt"
DEV_MODULES_OPT="${DEV_MODULES_OPT} ui "
DEV_MODULES_OPT="${DEV_MODULES_OPT} vcs"
DEV_MODULES_OPT="${DEV_MODULES_OPT} xsv"
export DEV_MODULES_OPT
