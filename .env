#!/usr/bin/env bash
#
# Development environment / Global variables
#
# * Used by DevBin64 to define project wide variables
# * Automatically loaded by dev-set
# * Do not include local variables (workstation specific) and secrets. Use .local and .secrets instead
# * Version: 3.1.2
#

# Main / Base file and directory names
export DEV_BASE_BUILD="build"
export DEV_BASE_TEST="test"
export DEV_BASE_SRC="src"
export DEV_BASE_DOT_LOCAL="dot.local"
export DEV_BASE_LOCAL=".local"
export DEV_BASE_DOT_SECRETS="dot.secrets"
export DEV_BASE_SECRETS=".secrets"
export DEV_BASE_ENV=".env"
export DEV_BASE_CHANGELOG="CHANGELOG.md"

# Main / Base path for builds
export DEV_PATH_BUILD="${DEV_PATH_ROOT}/${DEV_BASE_BUILD}"

# Main / Source files
export DEV_PATH_SRC="${DEV_PATH_ROOT}/${DEV_BASE_SRC}"

# Main / Test files
export DEV_PATH_TEST="${DEV_PATH_ROOT}/${DEV_BASE_TEST}"

# Main / DevOps scripts
export DEV_PATH_BIN="${DEV_PATH_ROOT}/bin"

# Main / DevOps libs
export DEV_PATH_LIB="${DEV_PATH_ROOT}/lib"

# Main / Project documentation
export DEV_PATH_DOCS="${DEV_PATH_ROOT}/docs"

# Main / DevOps ephemeral data content
export DEV_PATH_TMP="${DEV_PATH_ROOT}/tmp"

# Main / DevOps persistent data content
export DEV_PATH_VAR="${DEV_PATH_ROOT}/var"

#
# CICD Tools
#

# Lib / Installer64 / Repo Owner
export DEV_LIB_INSTALLER64_OWNER="automation64/installer64"
# Lib / Installer64 / Target
export DEV_LIB_INSTALLER64_TARGET="${DEV_PATH_LIB}/inst64"

# Lib / BashLib64 / Target
export DEV_LIB_BASHLIB64_TARGET="${DEV_PATH_LIB}/bl64"

# Lint / TestmanSH / Sources
export DEV_LINT_TESTMANSH_SOURCE="${DEV_BASE_BUILD}/test/bashlib64.bash"

# Release / GitHub / Repository Owner
export DEV_RELEASE_GITHUB_REPO_OWNER='automation64'
# Release / GitHub / Repository Name
export DEV_RELEASE_GITHUB_REPO_NAME='bashlib64'

#
# Project specific variables
#

# Env / Custom / Modules / Core
export DEV_ENV_CUSTOM_MODULES_CORE=''
DEV_ENV_CUSTOM_MODULES_CORE+=' check'
DEV_ENV_CUSTOM_MODULES_CORE+=' dbg'
DEV_ENV_CUSTOM_MODULES_CORE+=' log'
DEV_ENV_CUSTOM_MODULES_CORE+=' msg'
DEV_ENV_CUSTOM_MODULES_CORE+=' os'

# Env / Custom / Modules / Optional
export DEV_ENV_CUSTOM_MODULES_OPT=''
DEV_ENV_CUSTOM_MODULES_OPT+=' ans'
DEV_ENV_CUSTOM_MODULES_OPT+=' api'
DEV_ENV_CUSTOM_MODULES_OPT+=' arc'
DEV_ENV_CUSTOM_MODULES_OPT+=' aws'
DEV_ENV_CUSTOM_MODULES_OPT+=' bsh'
DEV_ENV_CUSTOM_MODULES_OPT+=' cnt'
DEV_ENV_CUSTOM_MODULES_OPT+=' cryp'
DEV_ENV_CUSTOM_MODULES_OPT+=' fmt'
DEV_ENV_CUSTOM_MODULES_OPT+=' fs '
DEV_ENV_CUSTOM_MODULES_OPT+=' gcp'
DEV_ENV_CUSTOM_MODULES_OPT+=' hlm'
DEV_ENV_CUSTOM_MODULES_OPT+=' iam'
DEV_ENV_CUSTOM_MODULES_OPT+=' k8s'
DEV_ENV_CUSTOM_MODULES_OPT+=' mdb'
DEV_ENV_CUSTOM_MODULES_OPT+=' pkg'
DEV_ENV_CUSTOM_MODULES_OPT+=' py'
DEV_ENV_CUSTOM_MODULES_OPT+=' rbac'
DEV_ENV_CUSTOM_MODULES_OPT+=' rnd'
DEV_ENV_CUSTOM_MODULES_OPT+=' rxtx'
DEV_ENV_CUSTOM_MODULES_OPT+=' tf'
DEV_ENV_CUSTOM_MODULES_OPT+=' tm '
DEV_ENV_CUSTOM_MODULES_OPT+=' txt'
DEV_ENV_CUSTOM_MODULES_OPT+=' ui '
DEV_ENV_CUSTOM_MODULES_OPT+=' vcs'
DEV_ENV_CUSTOM_MODULES_OPT+=' xsv'

# Test / TestmanSH / Cases
export DEV_TEST_TESTMANSH_CASES_OS="${DEV_BASE_TEST}/batscore/bash-os"
export DEV_TEST_TESTMANSH_CASES_NON_OS="${DEV_BASE_TEST}/batscore/bash-non-os"
export DEV_TEST_TESTMANSH_CASES_OPT="${DEV_BASE_TEST}/batscore/bash-opt"
export DEV_TEST_TESTMANSH_CASES_ANSIBLE="${DEV_BASE_TEST}/batscore/ansible"
export DEV_TEST_TESTMANSH_CASES_CLOUD="${DEV_BASE_TEST}/batscore/cloud"
export DEV_TEST_TESTMANSH_CASES_CONTAINER="${DEV_BASE_TEST}/batscore/container"
export DEV_TEST_TESTMANSH_CASES_KUBERNETES="${DEV_BASE_TEST}/batscore/kubernetes"
export DEV_TEST_TESTMANSH_CASES_MONGODB="${DEV_BASE_TEST}/batscore/mongodb"
export DEV_TEST_TESTMANSH_CASES_TERRAFORM="${DEV_BASE_TEST}/batscore/terraform"

# Test / TestmanSH / Container
export DEV_TEST_CONTAINER_OS_SINGLE='bash-test/alpine-3-bash-test:latest'
export DEV_TEST_CONTAINER_OS_REDHAT_A=''
DEV_TEST_CONTAINER_OS_REDHAT_A+=' bash-test/centos-7-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_A+=' bash-test/centos-8-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_A+=' bash-test/centos-9-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_A+=' bash-test/rhel-8-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_A+=' bash-test/rhel-9-bash-test:latest'
export DEV_TEST_CONTAINER_OS_REDHAT_B=''
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/almalinux-8-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/almalinux-9-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/oraclelinux-7-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/oraclelinux-8-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/oraclelinux-9-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/rockylinux-8-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDHAT_B+=' bash-test/rockylinux-9-bash-test:latest'
export DEV_TEST_CONTAINER_OS_DEBIAN=''
DEV_TEST_CONTAINER_OS_DEBIAN+=' bash-test/debian-9-bash-test:latest'
DEV_TEST_CONTAINER_OS_DEBIAN+=' bash-test/debian-10-bash-test:latest'
DEV_TEST_CONTAINER_OS_DEBIAN+=' bash-test/debian-11-bash-test:latest'
DEV_TEST_CONTAINER_OS_DEBIAN+=' bash-test/debian-12-bash-test:latest'
export DEV_TEST_CONTAINER_OS_FEDORA=''
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-33-bash-test:latest'
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-34-bash-test:latest'
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-35-bash-test:latest'
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-36-bash-test:latest'
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-37-bash-test:latest'
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-38-bash-test:latest'
DEV_TEST_CONTAINER_OS_FEDORA+=' bash-test/fedora-39-bash-test:latest'
export DEV_TEST_CONTAINER_OS_UBUNTU=''
DEV_TEST_CONTAINER_OS_UBUNTU+=' bash-test/ubuntu-18.4-bash-test:latest'
DEV_TEST_CONTAINER_OS_UBUNTU+=' bash-test/ubuntu-20.4-bash-test:latest'
DEV_TEST_CONTAINER_OS_UBUNTU+=' bash-test/ubuntu-21.4-bash-test:latest'
DEV_TEST_CONTAINER_OS_UBUNTU+=' bash-test/ubuntu-22.4-bash-test:latest'
DEV_TEST_CONTAINER_OS_UBUNTU+=' bash-test/ubuntu-23.10-bash-test:latest' # Using instead of 23.4 since there is no valid docker image available
export DEV_TEST_CONTAINER_OS_OTHER=''
DEV_TEST_CONTAINER_OS_OTHER+=' bash-test/alpine-3-bash-test:latest'
DEV_TEST_CONTAINER_OS_OTHER+=' bash-test/sles-15-bash-test:latest'
export DEV_TEST_CONTAINER_OS_REDUCED=''
DEV_TEST_CONTAINER_OS_REDUCED+=' bash-test/centos-7-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDUCED+=' bash-test/debian-9-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDUCED+=' bash-test/alpine-3-bash-test:latest'
DEV_TEST_CONTAINER_OS_REDUCED+=' bash-test/sles-15-bash-test:latest'
export DEV_TEST_CONTAINER_CONTAINER=''
DEV_TEST_CONTAINER_CONTAINER='bash-test/oraclelinux-9-bash-test-podman:latest'
DEV_TEST_CONTAINER_CONTAINER='bash-test/oraclelinux-9-bash-test-docker:latest'
export DEV_TEST_CONTAINER_NON_OS='bash-test/alpine-3-bash-test:latest'
export DEV_TEST_CONTAINER_OPT='bash-test/alpine-3-bash-test:latest'
export DEV_TEST_CONTAINER_ANSIBLE='bash-test/oraclelinux-9-bash-test-ansible-2:latest'
export DEV_TEST_CONTAINER_CLOUD='bash-test/oraclelinux-9-bash-test-cloud:latest'
export DEV_TEST_CONTAINER_KUBERNETES='bash-test/oraclelinux-9-bash-test-k8s:latest'
export DEV_TEST_CONTAINER_MONGODB='bash-test/oraclelinux-9-bash-test-mongosh-6:latest'
export DEV_TEST_CONTAINER_TERRAFORM='bash-test/oraclelinux-9-bash-test-terraform:latest'

# Pack / Custom / Package name
export DEV_PACK_CUSTOM_NAME_SA='bashlib64-stand-alone.tgz'
export DEV_PACK_CUSTOM_NAME_SPLIT='bashlib64-split.tgz'
export DEV_PACK_CUSTOM_NAME_MODULAR='bashlib64-modular.tgz'
# Pack / Custom / Package name
export DEV_PACK_CUSTOM_STORE="${DEV_PATH_BUILD}/pack"

# Release / GitHub / Artifact path
export DEV_RELEASE_GITHUB_ARTIFACT=''
DEV_RELEASE_GITHUB_ARTIFACT+=" ${DEV_PACK_CUSTOM_STORE}/${DEV_PACK_CUSTOM_NAME_SA}"
DEV_RELEASE_GITHUB_ARTIFACT+=" ${DEV_PACK_CUSTOM_STORE}/${DEV_PACK_CUSTOM_NAME_SPLIT}"
DEV_RELEASE_GITHUB_ARTIFACT+=" ${DEV_PACK_CUSTOM_STORE}/${DEV_PACK_CUSTOM_NAME_MODULAR}"
