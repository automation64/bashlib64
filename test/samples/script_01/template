#!/usr/bin/env bash
#######################################
# BashLib64 Script Template - Sample
#
#######################################

source "$_DEV_LIB_BASHLIB64_BUILD" || { echo "Error: unable to load bashlib64" && exit 1; }

#
# Globals
#

export BL64_LIB_VERBOSE=0

#
# Functions
#

function sample_script_test() {

  echo 'sample_script_test'

}

function sample_script_name() {

  bl64_bsh_script_get_name

}

function sample_script_setup_globals() {
  :
}

function sample_script_check_requirements() {

  [[ -z "$sample_script_command" ]] && sample_script_help && exit 1
  return 0

}

function sample_script_help() {

  bl64_msg_show_usage \
    '<-t|-n> [-h]' \
    'BashLib64 Script Template - Sample' \
    '
    -t   : Sample Test
    -n   : Show script name
    ' '
    -h   : Show help
    ' '
    '
}

#
# Main
#

declare -i sample_script_status=1
declare sample_script_option=''
declare sample_script_command=''
declare sample_script_command_tag=''

(($# == 0)) && sample_script_help && exit 1
while getopts ':tnh' sample_script_option; do
  case "$sample_script_option" in
  t)
    sample_script_command='sample_script_test'
    sample_script_command_tag='sample script test'
    ;;
  n)
    sample_script_command='sample_script_name'
    sample_script_command_tag='sample script name'
    ;;
  h) sample_script_help && exit 0 ;;
  *) sample_script_help && exit 1 ;;
  esac
done
sample_script_setup_globals
sample_script_check_requirements || exit 1

bl64_msg_all_disable_verbose
bl64_msg_show_batch_start "$sample_script_command_tag"
case "$sample_script_command" in
'sample_script_test') "$sample_script_command" ;;
'sample_script_name') "$sample_script_command" ;;
*) bl64_check_show_undefined "$sample_script_command" ;;
esac
sample_script_status=$?

bl64_msg_show_batch_finish $sample_script_status "$sample_script_command_tag"
exit $sample_script_status
