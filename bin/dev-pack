#!/usr/bin/env bash
#
# Pack application for delivery
#
# * Use to create a distributable package of the application
# * Template: 2.2.0
#

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || exit 1
# shellcheck source=lib/bl64/bashlib64.bash
source "${DEV_CICD_BASHLIB64}/bashlib64.bash" || exit 1

#
# Functions
#

function dev_pack() {
  bl64_dbg_app_show_function

  bl64_fs_rm_full "$DEV_PACK_STORE"
  bl64_fs_create_dir "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$DEV_PACK_STORE" ||
    return $?

  cd "$DEV_BUILD_FULL_PATH_RELEASE"
  bl64_msg_show_task "create stand-alone distributable package (${DEV_PACK_NAME_SA})"
  bl64_arc_run_tar zcf "${DEV_PACK_STORE}/${DEV_PACK_NAME_SA}" "$DEV_BUILD_NAME_SA" ||
    return $?

  bl64_msg_show_task "create core+opt alternative distributable package (${DEV_PACK_NAME_SPLIT})"
  bl64_arc_run_tar zcf "${DEV_PACK_STORE}/${DEV_PACK_NAME_SPLIT}" "$DEV_BUILD_NAME_CORE" "$DEV_BUILD_NAME_OPT" ||
    return $?

  bl64_msg_show_task "create modular alternative distributable package (${DEV_PACK_NAME_MODULAR})"
  bl64_arc_run_tar zcf "${DEV_PACK_STORE}/${DEV_PACK_NAME_MODULAR}" ${DEV_BUILD_NAME_MODULE}-*.bash
}

#
# Main
#

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable

bl64_arc_setup &&
  bl64_check_export 'DEV_BUILD_FULL_PATH_RELEASE' &&
  bl64_check_export 'DEV_BUILD_NAME_CORE' &&
  bl64_check_export 'DEV_BUILD_NAME_MODULE' &&
  bl64_check_export 'DEV_BUILD_NAME_OPT' &&
  bl64_check_export 'DEV_BUILD_NAME_SA' &&
  bl64_check_export 'DEV_PACK_STORE' &&
  bl64_check_export 'DEV_PACK_NAME_MODULAR' &&
  bl64_check_export 'DEV_PACK_NAME_SA' &&
  bl64_check_export 'DEV_PACK_NAME_SPLIT' ||
  exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'pack-app'
bl64_msg_show_task "create distributable package (${DEV_PACK_STORE})"
dev_pack
bl64_msg_show_batch_finish $? 'pack-app'
