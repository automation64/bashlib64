#!/usr/bin/env bash
#
# Dev / Pack / Project / Create distributable release
#
# * Version: 2.0.0
# * Template: 2.0.1
#

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=bin
source ./bin/dev-env-project || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-xsv.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-bsh.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-arc.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Functions
#

function dev_pack_prepare() {
  bl64_dbg_app_show_function
  local file_mode='0755'
  bl64_msg_show_task "gather distributable package content (${DEV_PATH_BUILD_STAGING})"
  bl64_fs_path_copy \
    "$file_mode" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" \
    "$DEV_PATH_BUILD_STAGING" \
    "$DEV_PATH_BUILD_PREPARE"/*
}

function dev_pack_create_modular() {
  bl64_dbg_app_show_function
  bl64_msg_show_task "create dstributable bundle (${DEV_PACK_PROJECT_BUNDLE_MODULAR})"
  # shellcheck disable=SC2086
  cd "$DEV_PATH_BUILD_STAGING" &&
    bl64_arc_run_tar \
      czf "${DEV_PATH_BUILD_PACK}/${DEV_PACK_PROJECT_BUNDLE_MODULAR}" \
      $BL64_ARC_SET_TAR_VERBOSE \
      "$DEV_PACK_PROJECT_ASSETS_MODULE"-*.bash
}

function dev_pack_create_split() {
  bl64_dbg_app_show_function
  bl64_msg_show_task "create dstributable bundle (${DEV_PACK_PROJECT_BUNDLE_SPLIT})"
  # shellcheck disable=SC2086
  cd "$DEV_PATH_BUILD_STAGING" &&
    bl64_arc_run_tar \
      czf "${DEV_PATH_BUILD_PACK}/${DEV_PACK_PROJECT_BUNDLE_SPLIT}" \
      $BL64_ARC_SET_TAR_VERBOSE \
      "$DEV_PACK_PROJECT_ASSETS_CORE" "$DEV_PACK_PROJECT_ASSETS_OPT"
}

function dev_pack_create_sa() {
  bl64_dbg_app_show_function
  bl64_msg_show_task "create dstributable bundle (${DEV_PACK_PROJECT_BUNDLE_SA})"
  # shellcheck disable=SC2086
  cd "$DEV_PATH_BUILD_STAGING" &&
    bl64_arc_run_tar \
      czf "${DEV_PATH_BUILD_PACK}/${DEV_PACK_PROJECT_BUNDLE_SA}" \
      $BL64_ARC_SET_TAR_VERBOSE \
      "$DEV_PACK_PROJECT_ASSETS_SA"
}

function dev_pack() {
  bl64_dbg_app_show_function
  bl64_msg_show_task "prepare packages destination (${DEV_PATH_BUILD_PACK})"
  dev_pack_prepare &&
    dev_pack_create_sa &&
    dev_pack_create_split &&
        dev_pack_create_modular
}

function dev_pack_initialize() {
  bl64_dbg_app_show_function
  bl64_check_export 'DEV_PACK_PROJECT_BUNDLE_SA' &&
    bl64_check_export 'DEV_PACK_PROJECT_BUNDLE_SPLIT' &&
    bl64_check_export 'DEV_PACK_PROJECT_BUNDLE_MODULAR' &&
    bl64_arc_setup &&
    bl64_fs_dir_reset \
      "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" \
      "$DEV_PATH_BUILD_STAGING" \
      "$DEV_PATH_BUILD_PACK"
}

#
# Main
#

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'dev-pack-project'
dev_pack_initialize &&
  dev_pack
bl64_msg_show_batch_finish $? 'dev-pack-project'
