#!/usr/bin/env bash
#
# Run test-cases
#
# * Test cases are done using bats-core
# * TestManSH is used to manage test environment
# * Tests are located in the default path "test/batscore"
# * Template: 1.5.0
#

#
# Imports
#

# shellcheck source=SCRIPTDIR/dev-set
source ./bin/dev-set || exit 1

# shellcheck source=SCRIPTDIR/../lib/bashlib64.bash
source "$DEV_CICD_BASHLIB64" || exit 1

#
# Main
#

declare target=''
declare family="${1:-other}"

bl64_check_export 'DEV_CICD_TESTMANSH' ||
  exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'test-app'
case "$family" in
'single')
  for target in $DEV_TEST_CONTAINER_OS_SINGLE; do
    "$DEV_CICD_TESTMANSH" -b -o -e "$target" -c "$DEV_TEST_CASE_OS" || exit $?
  done
  ;;
'fedora')
  for target in $DEV_TEST_CONTAINER_OS_FEDORA; do
    "$DEV_CICD_TESTMANSH" -b -o -e "$target" -c "$DEV_TEST_CASE_OS" || exit $?
  done
  ;;
'redhat')
  for target in $DEV_TEST_CONTAINER_OS_REDHAT; do
    "$DEV_CICD_TESTMANSH" -b -o -e "$target" -c "$DEV_TEST_CASE_OS" || exit $?
  done
  ;;
'debian')
  for target in $DEV_TEST_CONTAINER_OS_DEBIAN; do
    "$DEV_CICD_TESTMANSH" -b -o -e "$target" -c "$DEV_TEST_CASE_OS" || exit $?
  done
  ;;
'other')
  for target in $DEV_TEST_CONTAINER_OS_OTHER; do
    "$DEV_CICD_TESTMANSH" -b -o -e "$target" -c "$DEV_TEST_CASE_OS" || exit $?
  done
  ;;
'reduced')
  for target in $DEV_TEST_CONTAINER_OS_REDUCED; do
    "$DEV_CICD_TESTMANSH" -b -o -e "$target" -c "$DEV_TEST_CASE_OS" || exit $?
  done
  ;;
*) echo "invalid option" ;;
esac
bl64_msg_show_batch_finish $? 'test-app'
