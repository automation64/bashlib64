#!/usr/bin/env bash
# template-test: 1.0.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1
# shellcheck source-path=bin
source ./bin/dev-env-bash || exit 1

declare MY_TARGET="${*:-}"

function my_test_run_instance() {
  local test_file="$1"
  "${DEV_PATH_ROOT}/${test_file}"
}

function my_test_run() {
  bl64_dbg_app_show_function "$@"
  local test_file="$1"

  bl64_dbg_app_show_comments 'silently ignore .gitkeep file as its not a test script'
  [[ "$test_file" =~ "$DEV_BASE_GITKEEP" ]] && return 0

  bl64_msg_show_phase "run test target: ${test_file}"
  my_test_run_instance "$test_file"
  # shellcheck disable=SC2181
  if (( $? == 0 )); then
    bl64_msg_show_info 'test result: PASS'
  else
    bl64_msg_show_info 'test result: FAIL'
    return 1
  fi
}

function my_test() {
  bl64_dbg_app_show_function "$@"
  local current=''
  local tests=''

  bl64_dbg_app_show_comments 'define target tests'
  if [[ -z "$MY_TARGET" ]]; then
    MY_TARGET="$DEV_TEST_BASH_CASES"
  fi
  if [[ -d "$MY_TARGET" ]]; then
    bl64_dbg_app_show_comments "look for tests (${MY_TARGET})"
    tests="$(bl64_fs_file_search "$MY_TARGET")" ||
      return $?
  else
    tests="$MY_TARGET"
  fi
  for current in $tests; do
    bl64_dbg_app_show_comments 'skip git dir holder'
    [[ "$current" == "$DEV_BASE_GITKEEP" ]] && continue
    my_test_run "$current" ||
      return $?
  done
}

function my_initialize() {
  bl64_dbg_app_show_function
  bl64_msg_show_about
  bl64_check_directory "$DEV_TEST_BASH_CASES"
}


[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable
bl64_lib_script_version_set '1.1.0'
bl64_msg_set_format "$DEV_VERBOSE" && bl64_msg_all_enable_verbose

bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
my_initialize &&
  my_test "$MY_TARGET"
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
