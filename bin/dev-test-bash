#!/usr/bin/env bash
# template-task: 1.8.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=bin
source ./bin/dev-env-bash || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-xsv.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-bsh.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-cnt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

declare MY_CONTAINER="${1:-${BL64_VAR_DEFAULT}}"
shift
declare MY_TARGET="${*:-}"

function my_test_host_run() {
  local test_file="$1"
  "${DEV_PATH_ROOT}/${test_file}"
}

function my_test_container_run() {
  local container_path="$1"
  local test_file="$2"
  # shellcheck disable=SC2086
  bl64_cnt_run \
    $BL64_CNT_SET_RM \
    $BL64_CNT_SET_TTY \
    --env=DEV_TEST_BASH_CONTAINER_ENVIRONMENT='ON' \
    --env=DEV_ENV_BASH_CONTAINER_PATH_SRC \
    --env=DEV_ENV_BASH_CONTAINER_PATH_ROOT \
    --env=DEV_ENV_BASH_CONTAINER_PATH_TEST \
    --workdir="$DEV_ENV_BASH_CONTAINER_PATH_ROOT" \
    --mount "type=bind,source=${DEV_PATH_SRC},target=${DEV_ENV_BASH_CONTAINER_PATH_SRC},readonly" \
    --mount "type=bind,source=${DEV_PATH_ROOT},target=${DEV_ENV_BASH_CONTAINER_PATH_ROOT},readonly" \
    --mount "type=bind,source=${DEV_PATH_TEST},target=${DEV_ENV_BASH_CONTAINER_PATH_TEST},readonly" \
    --entrypoint="${DEV_ENV_BASH_CONTAINER_PATH_ROOT}/${test_file}" \
    "${DEV_ENV_BASH_REGISTRY}/${container_path}"
}

function my_test_run() {
  bl64_dbg_app_show_function "$@"
  local container_path="$1"
  local test_file="$2"

  bl64_dbg_app_show_comments 'silently ignore .gitkeep file as its not a test script'
  [[ "$test_file" =~ "$DEV_BASE_GITKEEP" ]] && return 0

  bl64_msg_show_phase "run test target: ${test_file}"
  if [[ "$container_path" == "$DEV_TEST_BASH_CONTAINER_DISABLED" ]]; then
    my_test_host_run "$test_file"
  else
    my_test_container_run "$container_path" "$test_file"
  fi
}

function my_test() {
  bl64_dbg_app_show_function
  local current=''
  local tests=''

  bl64_dbg_app_show_comments 'add path prefix if not present'
  [[ ! "$MY_TARGET" =~ ${DEV_TEST_BASH_CASES} ]] &&
    MY_TARGET="${DEV_TEST_BASH_CASES}/${MY_TARGET}"
  if [[ -d "$MY_TARGET" ]]; then
    bl64_dbg_app_show_comments "look for tests (${MY_TARGET})"
    tests="$(bl64_fs_file_search "$MY_TARGET")" ||
      return $?
  else
    tests="$MY_TARGET"
  fi

  for current in $tests; do
    bl64_dbg_app_show_comments 'skip git dir holder'
    [[ "$current" == "$DEV_BASE_GITKEEP" ]] && continue
    my_test_run "${MY_CONTAINER}" "$current" ||
      return $?
    sleep "$DEV_TEST_BASH_COOLDOWN"
  done
}

function my_initialize() {
  bl64_dbg_app_show_function

  bl64_lib_var_is_default "$MY_CONTAINER" &&
    MY_CONTAINER="$DEV_TEST_BASH_CONTAINER"
  if [[ -z "$MY_TARGET" ]]; then
    MY_TARGET="$DEV_TEST_BASH_CASES"
  fi

  bl64_cnt_setup &&
    bl64_check_directory "$DEV_TEST_BASH_CASES" &&
    bl64_msg_show_setup "$BL64_VAR_DEFAULT" \
      'MY_CONTAINER' \
      'MY_TARGET'
}

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable
bl64_lib_script_version_set '1.3.1'
bl64_msg_help_about_set 'Run bash test scripts inside a container or on the host'
bl64_msg_all_enable_verbose && my_initialize || exit $?

bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
my_test
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
