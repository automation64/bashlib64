#!/usr/bin/env bash
# template-task: 1.8.0
#######################################
# Copyright SerDigital64 - https://github.com/serdigital64
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at: http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=bin
source ./bin/dev-env-git || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-xsv.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-bsh.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-rxtx.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-api.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-vcs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

declare MY_VERSION="${1:-}"

function my_release() {
  bl64_dbg_app_show_function

  if [[ -n "$(bl64_vcs_run_git status --porcelain)" ]]; then
    bl64_msg_show_error 'Uncommitted changes found, please commit or stash them before creating a release branch.'
    return $BL64_LIB_ERROR_CHECK_FAILED
  fi

  bl64_msg_show_task "switch to main branch (${DEV_GIT_BRANCH_MAIN})"
  bl64_vcs_run_git checkout main &&
    bl64_msg_show_task "create release branch (${DEV_GIT_BRANCH_RELEASE})" &&
    bl64_vcs_run_git checkout -b "$DEV_GIT_BRANCH_RELEASE" &&
    bl64_vcs_run_git push --set-upstream "$DEV_GIT_REMOTE_ORIGIN" "$DEV_GIT_BRANCH_RELEASE" &&
    bl64_msg_show_task "squash feature branch to release (${DEV_GIT_BRANCH_FEATURE} -> ${DEV_GIT_BRANCH_RELEASE})" &&
    bl64_vcs_run_git merge --squash "$DEV_GIT_BRANCH_FEATURE" &&
    bl64_vcs_run_git commit -m "real: promote ${MY_VERSION}" &&
    bl64_msg_show_task 'push release branch to origin' &&
    bl64_vcs_run_git push
}

function my_initialize() {
  bl64_dbg_app_show_function
  bl64_msg_show_about
  bl64_check_parameter 'MY_VERSION' &&
    bl64_msg_show_setup "$BL64_VAR_DEFAULT" \
      'MY_VERSION' \
      'DEV_GIT_BRANCH_MAIN' \
      'DEV_GIT_REMOTE_ORIGIN' \
      'DEV_GIT_BRANCH_FEATURE' \
      'DEV_GIT_BRANCH_RELEASE'
}

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable
bl64_lib_script_version_set '1.0.0'
bl64_msg_help_about_set 'Create and push a squashed release branch from feature branch'
bl64_msg_all_enable_verbose && my_initialize || exit $?

bl64_msg_show_batch_start "$BL64_SCRIPT_ID"
my_release
bl64_msg_show_batch_finish $? "$BL64_SCRIPT_ID"
